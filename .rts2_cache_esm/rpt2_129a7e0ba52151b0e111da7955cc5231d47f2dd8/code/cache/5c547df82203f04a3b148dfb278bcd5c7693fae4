{"code":"/**\r\n * Clear the screen by filling it with a plain color.\r\n * This color is defined by attributes red, gree, blue and alpha, which must be between 0 and 1.\r\n */\r\nimport Color from '../webgl/color';\r\nimport Painter from './painter';\r\nexport default class ClearPainter extends Painter {\r\n    constructor(params) {\r\n        super();\r\n        this.params = params;\r\n        this._red = 0.8;\r\n        this._green = 0.4;\r\n        this._blue = 0.2;\r\n        this._alpha = 1;\r\n    }\r\n    get red() {\r\n        return this._red;\r\n    }\r\n    set red(v) {\r\n        this._red = v;\r\n    }\r\n    get green() {\r\n        return this._green;\r\n    }\r\n    set green(v) {\r\n        this._green = v;\r\n    }\r\n    get blue() {\r\n        return this._blue;\r\n    }\r\n    set blue(v) {\r\n        this._blue = v;\r\n    }\r\n    get alpha() {\r\n        return this._alpha;\r\n    }\r\n    set alpha(v) {\r\n        this._alpha = v;\r\n    }\r\n    get color() {\r\n        const color = new Color();\r\n        color.R = this._red;\r\n        color.G = this._green;\r\n        color.B = this._blue;\r\n        color.A = this._alpha;\r\n        return color.stringify();\r\n    }\r\n    set color(cssColor) {\r\n        const color = new Color(cssColor);\r\n        this._red = color.R;\r\n        this._green = color.G;\r\n        this._blue = color.B;\r\n        this._alpha = color.A;\r\n    }\r\n    render() {\r\n        const { scene } = this;\r\n        if (!scene)\r\n            return;\r\n        const { gl } = scene;\r\n        gl.clearColor(this._red, this._green, this._blue, this._alpha);\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n    }\r\n    initialize() {\r\n        if (this.params) {\r\n            this.color = this.params.color || '#d72';\r\n        }\r\n    }\r\n    destroy() {\r\n        // Nothing to destroy for this painter.\r\n    }\r\n}\r\n//# sourceMappingURL=clear.js.map","references":["/home/petitjea/Code/github/flat-land-gl/src/webgl/color.ts","/home/petitjea/Code/github/flat-land-gl/src/painter/painter.ts"],"map":"{\"version\":3,\"file\":\"clear.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/painter/clear.ts\"],\"names\":[],\"mappings\":\"AAAA;;;GAGG;AACH,OAAO,KAAK,MAAM,gBAAgB,CAAA;AAClC,OAAO,OAAO,MAAM,WAAW,CAAA;AAM/B,MAAM,CAAC,OAAO,OAAO,YAAa,SAAQ,OAAO;IAiD7C,YAAoB,MAA2B;QAC3C,KAAK,EAAE,CAAA;QADS,WAAM,GAAN,MAAM,CAAqB;QALvC,SAAI,GAAG,GAAG,CAAA;QACV,WAAM,GAAG,GAAG,CAAA;QACZ,UAAK,GAAG,GAAG,CAAA;QACX,WAAM,GAAG,CAAC,CAAA;IAIlB,CAAC;IAlDD,IAAI,GAAG;QACH,OAAO,IAAI,CAAC,IAAI,CAAA;IACpB,CAAC;IACD,IAAI,GAAG,CAAC,CAAS;QACb,IAAI,CAAC,IAAI,GAAG,CAAC,CAAA;IACjB,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;IACD,IAAI,KAAK,CAAC,CAAS;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IACnB,CAAC;IAED,IAAI,IAAI;QACJ,OAAO,IAAI,CAAC,KAAK,CAAA;IACrB,CAAC;IACD,IAAI,IAAI,CAAC,CAAS;QACd,IAAI,CAAC,KAAK,GAAG,CAAC,CAAA;IAClB,CAAC;IAED,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;IACD,IAAI,KAAK,CAAC,CAAS;QACf,IAAI,CAAC,MAAM,GAAG,CAAC,CAAA;IACnB,CAAC;IAED,IAAI,KAAK;QACL,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAA;QACzB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,IAAI,CAAA;QACnB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;QACrB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,KAAK,CAAA;QACpB,KAAK,CAAC,CAAC,GAAG,IAAI,CAAC,MAAM,CAAA;QACrB,OAAO,KAAK,CAAC,SAAS,EAAE,CAAA;IAC5B,CAAC;IACD,IAAI,KAAK,CAAC,QAAgB;QACtB,MAAM,KAAK,GAAG,IAAI,KAAK,CAAC,QAAQ,CAAC,CAAA;QACjC,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC,CAAC,CAAA;QACnB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAA;QACrB,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC,CAAA;QACpB,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC,CAAC,CAAA;IACzB,CAAC;IAUD,MAAM;QACF,MAAM,EAAE,KAAK,EAAE,GAAG,IAAI,CAAA;QACtB,IAAI,CAAC,KAAK;YAAE,OAAM;QAClB,MAAM,EAAE,EAAE,EAAE,GAAG,KAAK,CAAA;QACpB,EAAE,CAAC,UAAU,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,MAAM,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,MAAM,CAAC,CAAA;QAC9D,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC,gBAAgB,CAAC,CAAA;IACjC,CAAC;IAES,UAAU;QAChB,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,MAAM,CAAC,KAAK,IAAI,MAAM,CAAA;SAC3C;IACL,CAAC;IAES,OAAO;QACb,uCAAuC;IAC3C,CAAC;CACJ\"}","dts":{"name":"/home/petitjea/Code/github/flat-land-gl/src/painter/clear.d.ts","writeByteOrderMark":false,"text":"import Painter from './painter';\r\ninterface IClearPainterParams {\r\n    color?: string;\r\n}\r\nexport default class ClearPainter extends Painter {\r\n    private params;\r\n    get red(): number;\r\n    set red(v: number);\r\n    get green(): number;\r\n    set green(v: number);\r\n    get blue(): number;\r\n    set blue(v: number);\r\n    get alpha(): number;\r\n    set alpha(v: number);\r\n    get color(): string;\r\n    set color(cssColor: string);\r\n    private _red;\r\n    private _green;\r\n    private _blue;\r\n    private _alpha;\r\n    constructor(params: IClearPainterParams);\r\n    render(): void;\r\n    protected initialize(): void;\r\n    protected destroy(): void;\r\n}\r\nexport {};\r\n"}}
