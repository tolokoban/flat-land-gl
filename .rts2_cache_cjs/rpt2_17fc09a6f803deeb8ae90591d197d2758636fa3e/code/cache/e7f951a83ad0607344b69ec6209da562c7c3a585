{"code":"const VIRTUAL_SCREEN_RESOLUTION = 1024;\r\nconst HALF = 0.5;\r\nexport default class Pointer {\r\n    /** @hidden */\r\n    constructor(canvas) {\r\n        this.canvas = canvas;\r\n        this._x = 0;\r\n        this._y = 0;\r\n        this._down = false;\r\n        // If 0, pointer is up.\r\n        this._downTime = 0;\r\n        this._eventDown = false;\r\n        this._eventUp = false;\r\n        this.onMouseMove = (evt) => {\r\n            this.computeCoords(evt.clientX, evt.clientY);\r\n        };\r\n        this.onTouchMove = (te) => {\r\n            const evt = te.touches[0];\r\n            this.computeCoords(evt.clientX, evt.clientY);\r\n        };\r\n        this.onMouseDown = (evt) => {\r\n            this.onDown(evt.clientX, evt.clientY);\r\n        };\r\n        this.onTouchStart = (te) => {\r\n            const evt = te.touches[0];\r\n            this.onDown(evt.clientX, evt.clientY);\r\n        };\r\n        this.onMouseUp = (evt) => {\r\n            this.onUp(evt.clientX, evt.clientY);\r\n        };\r\n        this.onTouchEnd = (te) => {\r\n            const evt = te.touches[0];\r\n            this.onUp(evt.clientX, evt.clientY);\r\n        };\r\n        window.addEventListener('mousemove', this.onMouseMove, true);\r\n        window.addEventListener('touchmove', this.onTouchMove, true);\r\n        window.addEventListener('mousedown', this.onMouseDown, true);\r\n        window.addEventListener('touchstart', this.onTouchStart, true);\r\n        window.addEventListener('mouseup', this.onMouseUp, true);\r\n        window.addEventListener('touchend', this.onTouchEnd, true);\r\n    }\r\n    /** @hidden */\r\n    reset() {\r\n        this._eventDown = false;\r\n        this._eventUp = false;\r\n    }\r\n    get x() {\r\n        return this._x;\r\n    }\r\n    get y() {\r\n        return this._y;\r\n    }\r\n    /** Test if the pointer is touching the screen. */\r\n    get down() {\r\n        return this._down;\r\n    }\r\n    /** `true` only if the pointer started touching the screen this very last frame. */\r\n    get eventUp() {\r\n        return this._eventUp;\r\n    }\r\n    /** `true` only if the pointer stopped touching the screen this very last frame. */\r\n    get eventDown() {\r\n        return this._eventDown;\r\n    }\r\n    onDown(x, y) {\r\n        if (this._downTime !== 0)\r\n            return;\r\n        this.computeCoords(x, y);\r\n        this._down = true;\r\n        this._eventDown = true;\r\n        this._downTime = Date.now();\r\n    }\r\n    onUp(x, y) {\r\n        if (this._downTime === 0)\r\n            return;\r\n        this.computeCoords(x, y);\r\n        this._down = false;\r\n        this._eventUp = true;\r\n        this._downTime = 0;\r\n    }\r\n    computeCoords(pointerX, pointerY) {\r\n        const { canvas } = this;\r\n        const rect = canvas.getBoundingClientRect();\r\n        const x = pointerX - rect.left;\r\n        const y = pointerY - rect.top;\r\n        const w = rect.width;\r\n        const h = rect.height;\r\n        if (w > h) {\r\n            this._x = (VIRTUAL_SCREEN_RESOLUTION * x) / w;\r\n            this._y = VIRTUAL_SCREEN_RESOLUTION * (HALF * (1 - h / w) + y / w);\r\n        }\r\n        else {\r\n            this._x = VIRTUAL_SCREEN_RESOLUTION * (HALF * (1 - w / h) + x / h);\r\n            this._y = (VIRTUAL_SCREEN_RESOLUTION * y) / h;\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=pointer.js.map","references":[],"map":"{\"version\":3,\"file\":\"pointer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../src/pointer.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/petitjea/Code/github/flat-land-gl/src/pointer.d.ts","writeByteOrderMark":false,"text":"export default class Pointer {\r\n    private canvas;\r\n    private _x;\r\n    private _y;\r\n    private _down;\r\n    private _downTime;\r\n    private _eventDown;\r\n    private _eventUp;\r\n    /** @hidden */\r\n    constructor(canvas: HTMLCanvasElement);\r\n    /** @hidden */\r\n    reset(): void;\r\n    get x(): number;\r\n    get y(): number;\r\n    /** Test if the pointer is touching the screen. */\r\n    get down(): boolean;\r\n    /** `true` only if the pointer started touching the screen this very last frame. */\r\n    get eventUp(): boolean;\r\n    /** `true` only if the pointer stopped touching the screen this very last frame. */\r\n    get eventDown(): boolean;\r\n    private onMouseMove;\r\n    private onTouchMove;\r\n    private onMouseDown;\r\n    private onTouchStart;\r\n    private onDown;\r\n    private onMouseUp;\r\n    private onTouchEnd;\r\n    private onUp;\r\n    private computeCoords;\r\n}\r\n"}}
