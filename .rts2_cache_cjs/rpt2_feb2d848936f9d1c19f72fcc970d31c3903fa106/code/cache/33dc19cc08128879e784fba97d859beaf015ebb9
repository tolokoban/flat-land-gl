{"code":"import Program from '../webgl/program';\r\nexport default class Painter {\r\n    constructor() {\r\n        this._programs = [];\r\n        this._scene = null;\r\n    }\r\n    get scene() {\r\n        return this._scene;\r\n    }\r\n    set scene(scene) {\r\n        if (scene === this._scene)\r\n            return;\r\n        if (this._scene) {\r\n            this.internalDestroy(this._scene);\r\n        }\r\n        this._scene = scene;\r\n        if (scene) {\r\n            this.initialize(scene);\r\n        }\r\n    }\r\n    createProgram(shaders, includes = {}) {\r\n        const scene = this._scene;\r\n        if (!scene) {\r\n            throw Error('This painter has no scene!\\ncreateProfram() should only be called from initialize().');\r\n        }\r\n        const prg = new Program(scene.gl, shaders, includes);\r\n        this._programs.push(prg);\r\n        return prg;\r\n    }\r\n    fatal(message) {\r\n        console.error(`Fatal error in Painter:`, message);\r\n        return new Error(message);\r\n    }\r\n    internalDestroy(scene) {\r\n        const { gl } = scene;\r\n        for (const prg of this._programs) {\r\n            gl.deleteProgram(prg);\r\n        }\r\n    }\r\n}\r\n//# sourceMappingURL=painter.js.map","references":["/home/petitjea/Code/github/flat-land-gl/src/scene.ts","/home/petitjea/Code/github/flat-land-gl/src/webgl/program.ts"],"map":"{\"version\":3,\"file\":\"painter.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/painter/painter.ts\"],\"names\":[],\"mappings\":\"AAIA,OAAO,OAAqB,MAAM,kBAAkB,CAAA;AAEpD,MAAM,CAAC,OAAO,OAAgB,OAAO;IAArC;QAcY,cAAS,GAAc,EAAE,CAAA;QACzB,WAAM,GAAiB,IAAI,CAAA;IA8BvC,CAAC;IA5CG,IAAI,KAAK;QACL,OAAO,IAAI,CAAC,MAAM,CAAA;IACtB,CAAC;IACD,IAAI,KAAK,CAAC,KAAmB;QACzB,IAAI,KAAK,KAAK,IAAI,CAAC,MAAM;YAAE,OAAM;QACjC,IAAI,IAAI,CAAC,MAAM,EAAE;YACb,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA;SACpC;QACD,IAAI,CAAC,MAAM,GAAG,KAAK,CAAA;QACnB,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAA;SACzB;IACL,CAAC;IASS,aAAa,CAAC,OAAiB,EAAE,WAAsC,EAAE;QAC/E,MAAM,KAAK,GAAG,IAAI,CAAC,MAAM,CAAA;QACzB,IAAI,CAAC,KAAK,EAAE;YACR,MAAM,KAAK,CACP,sFAAsF,CACzF,CAAA;SACJ;QACD,MAAM,GAAG,GAAG,IAAI,OAAO,CAAC,KAAK,CAAC,EAAE,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAA;QACpD,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,GAAG,CAAC,CAAA;QACxB,OAAO,GAAG,CAAA;IACd,CAAC;IAES,KAAK,CAAC,OAAgB;QAC5B,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,OAAO,CAAC,CAAA;QACjD,OAAO,IAAI,KAAK,CAAC,OAAO,CAAC,CAAA;IAC7B,CAAC;IAEO,eAAe,CAAC,KAAY;QAChC,MAAM,EAAE,EAAE,EAAE,GAAG,KAAK,CAAA;QACpB,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,SAAS,EAAE;YAC9B,EAAE,CAAC,aAAa,CAAC,GAAG,CAAC,CAAA;SACxB;IACL,CAAC;CACJ\"}","dts":{"name":"/home/petitjea/Code/github/flat-land-gl/src/painter/painter.d.ts","writeByteOrderMark":false,"text":"/**\r\n * This is a virtual painter from which all the other will inherit.\r\n */\r\nimport Scene from '../scene';\r\nimport Program, { IShaders } from '../webgl/program';\r\nexport default abstract class Painter {\r\n    get scene(): Scene | null;\r\n    set scene(scene: Scene | null);\r\n    private _programs;\r\n    private _scene;\r\n    abstract render(time: number): void;\r\n    protected abstract initialize(scene: Scene): void;\r\n    protected abstract destroy(scene: Scene): void;\r\n    protected createProgram(shaders: IShaders, includes?: {\r\n        [key: string]: string;\r\n    }): Program;\r\n    protected fatal(message?: string): Error;\r\n    private internalDestroy;\r\n}\r\n"}}
