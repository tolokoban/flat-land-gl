{"code":"/**\r\n * Resolution in CSS pixels. If omitted, the real resolution\r\n * of the device is taken. On smartphones, for instance,\r\n * the resolution is often greater than 1.\r\n *\r\n * Return `true` if the size has changed.\r\n */\r\nexport default (gl, _resolution = 0) => {\r\n    const resolution = _resolution <= 0 ? window.devicePixelRatio : _resolution;\r\n    const canvas = gl.canvas;\r\n    if (canvas instanceof HTMLCanvasElement) {\r\n        const displayWidth = Math.floor(canvas.clientWidth * resolution);\r\n        const displayHeight = Math.floor(canvas.clientHeight * resolution);\r\n        // Check if the canvas is not the same size.\r\n        if (canvas.width !== displayWidth || canvas.height !== displayHeight) {\r\n            // Make the canvas the same size\r\n            canvas.width = displayWidth;\r\n            canvas.height = displayHeight;\r\n            gl.viewport(0, 0, displayWidth, displayHeight);\r\n            return true;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n//# sourceMappingURL=resize.js.map","references":[],"map":"{\"version\":3,\"file\":\"resize.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/webgl/resize.ts\"],\"names\":[],\"mappings\":\"AAAA;;;;;;GAMG;AACH,eAAe,CAAC,EAAyB,EAAE,WAAW,GAAG,CAAC,EAAE,EAAE;IAC5D,MAAM,UAAU,GAAG,WAAW,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,gBAAgB,CAAC,CAAC,CAAC,WAAW,CAAA;IAE3E,MAAM,MAAM,GAAG,EAAE,CAAC,MAAM,CAAA;IACxB,IAAI,MAAM,YAAY,iBAAiB,EAAE;QACvC,MAAM,YAAY,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,CAAA;QAChE,MAAM,aAAa,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,YAAY,GAAG,UAAU,CAAC,CAAA;QAElE,4CAA4C;QAC5C,IAAI,MAAM,CAAC,KAAK,KAAK,YAAY,IAAI,MAAM,CAAC,MAAM,KAAK,aAAa,EAAE;YACpE,gCAAgC;YAChC,MAAM,CAAC,KAAK,GAAG,YAAY,CAAA;YAC3B,MAAM,CAAC,MAAM,GAAG,aAAa,CAAA;YAC7B,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,EAAE,YAAY,EAAE,aAAa,CAAC,CAAA;YAC9C,OAAO,IAAI,CAAA;SACZ;KACF;IACD,OAAO,KAAK,CAAA;AACd,CAAC,CAAA\"}","dts":{"name":"/home/petitjea/Code/github/flat-land-gl/src/webgl/resize.d.ts","writeByteOrderMark":false,"text":"declare const _default: (gl: WebGLRenderingContext, _resolution?: number) => boolean;\r\n/**\r\n * Resolution in CSS pixels. If omitted, the real resolution\r\n * of the device is taken. On smartphones, for instance,\r\n * the resolution is often greater than 1.\r\n *\r\n * Return `true` if the size has changed.\r\n */\r\nexport default _default;\r\n"}}
