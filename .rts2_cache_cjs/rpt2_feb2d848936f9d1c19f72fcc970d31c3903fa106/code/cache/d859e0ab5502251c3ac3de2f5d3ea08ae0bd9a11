{"code":"import Calc from '../../calc';\r\nconst DEFAULT_WIDTH = 64;\r\nconst DEFAULT_HEIGHT = 64;\r\nconst HALF = 0.5;\r\nexport default class Sprite {\r\n    constructor(index, getData, params) {\r\n        this.getData = getData;\r\n        this.extra = {};\r\n        this.$index = 0;\r\n        this.$index = index;\r\n        const width = params.width || DEFAULT_WIDTH;\r\n        const height = params.height || DEFAULT_HEIGHT;\r\n        this.params = {\r\n            x: 0,\r\n            y: 0,\r\n            z: 0,\r\n            width,\r\n            height,\r\n            originX: width * HALF,\r\n            originY: height * HALF,\r\n            u0: 0,\r\n            v0: 0,\r\n            u1: 1,\r\n            v1: 1,\r\n            scale: 1,\r\n            angle: 0,\r\n            ...params,\r\n        };\r\n    }\r\n    get x() {\r\n        return this.params.x;\r\n    }\r\n    get y() {\r\n        return this.params.y;\r\n    }\r\n    get z() {\r\n        return this.params.z;\r\n    }\r\n    get width() {\r\n        return this.params.width;\r\n    }\r\n    get height() {\r\n        return this.params.height;\r\n    }\r\n    get originX() {\r\n        return this.params.originX;\r\n    }\r\n    get originY() {\r\n        return this.params.originY;\r\n    }\r\n    get u0() {\r\n        return this.params.u0;\r\n    }\r\n    get v0() {\r\n        return this.params.v0;\r\n    }\r\n    get u1() {\r\n        return this.params.u1;\r\n    }\r\n    get v1() {\r\n        return this.params.v1;\r\n    }\r\n    update(newParams = {}) {\r\n        this.params = { ...this.params, ...newParams };\r\n        const { getData, $index, params } = this;\r\n        const data = getData();\r\n        const { x, y, z, originX, originY, width, height, u0, v0, u1, v1, scale, angle } = params;\r\n        const xxA = -originX;\r\n        const yyA = -originY;\r\n        const xxB = xxA + width;\r\n        const yyB = yyA;\r\n        const xxC = xxA + width;\r\n        const yyC = yyA + height;\r\n        const xxD = xxA;\r\n        const yyD = yyA + height;\r\n        let xA = xxA * scale;\r\n        let yA = yyA * scale;\r\n        let xB = xxB * scale;\r\n        let yB = yyB * scale;\r\n        let xC = xxC * scale;\r\n        let yC = yyC * scale;\r\n        let xD = xxD * scale;\r\n        let yD = yyD * scale;\r\n        // tslint:disable-next-line:no-bitwise\r\n        if ((angle | 0) !== 0) {\r\n            const C = Calc.cos(angle);\r\n            const S = Calc.sin(angle);\r\n            xA = (xxA * C + yyA * S) * scale;\r\n            yA = (yyA * C - xxA * S) * scale;\r\n            xB = (xxB * C + yyB * S) * scale;\r\n            yB = (yyB * C - xxB * S) * scale;\r\n            xC = (xxC * C + yyC * S) * scale;\r\n            yC = (yyC * C - xxC * S) * scale;\r\n            xD = (xxD * C + yyD * S) * scale;\r\n            yD = (yyD * C - xxD * S) * scale;\r\n        }\r\n        // tslint:disable:no-magic-numbers\r\n        data[$index + 0] = xA + x;\r\n        data[$index + 1] = yA + y;\r\n        data[$index + 2] = z;\r\n        data[$index + 3] = u0;\r\n        data[$index + 4] = v0;\r\n        data[$index + 5] = xB + x;\r\n        data[$index + 6] = yB + y;\r\n        data[$index + 7] = z;\r\n        data[$index + 8] = u1;\r\n        data[$index + 9] = v0;\r\n        data[$index + 10] = xC + x;\r\n        data[$index + 11] = yC + y;\r\n        data[$index + 12] = z;\r\n        data[$index + 13] = u1;\r\n        data[$index + 14] = v1;\r\n        data[$index + 15] = xD + x;\r\n        data[$index + 16] = yD + y;\r\n        data[$index + 17] = z;\r\n        data[$index + 18] = u0;\r\n        data[$index + 19] = v1;\r\n        // tslint:enable:no-magic-numbers\r\n    }\r\n}\r\n//# sourceMappingURL=sprite.js.map","references":["/home/petitjea/Code/github/flat-land-gl/src/calc.ts","/home/petitjea/Code/github/flat-land-gl/src/types.ts"],"map":"{\"version\":3,\"file\":\"sprite.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/painter/sprites/sprite.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/petitjea/Code/github/flat-land-gl/src/painter/sprites/sprite.d.ts","writeByteOrderMark":false,"text":"import { IExtra } from '../../types';\r\nexport interface ISprite {\r\n    x: number;\r\n    y: number;\r\n    z: number;\r\n    width: number;\r\n    height: number;\r\n    originX: number;\r\n    originY: number;\r\n    u0: number;\r\n    v0: number;\r\n    u1: number;\r\n    v1: number;\r\n    scale: number;\r\n    angle: number;\r\n}\r\nexport default class Sprite {\r\n    private getData;\r\n    get x(): number;\r\n    get y(): number;\r\n    get z(): number;\r\n    get width(): number;\r\n    get height(): number;\r\n    get originX(): number;\r\n    get originY(): number;\r\n    get u0(): number;\r\n    get v0(): number;\r\n    get u1(): number;\r\n    get v1(): number;\r\n    readonly extra: IExtra;\r\n    $index: number;\r\n    private params;\r\n    constructor(index: number, getData: () => Float32Array, params: Partial<ISprite>);\r\n    update(newParams?: Partial<ISprite>): void;\r\n}\r\n"}}
