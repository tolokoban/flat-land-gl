{"code":"const BPE = Float32Array.BYTES_PER_ELEMENT;\r\nconst DIM1 = 1;\r\nconst DIM2 = 2;\r\nconst DIM3 = 3;\r\nconst DIM4 = 4;\r\n/**\r\n * Creating  a  WebGL  program  for shaders  is  painful.  This  class\r\n * simplifies the process.\r\n *\r\n * @class Program\r\n *\r\n * Object properties starting with `$` are WebGL uniforms or attributes.\r\n * Uniforms behave as expected: you can read/write a value.\r\n * Attributes when read, return the location. And when written, enable/disabled\r\n * this attribute. So you read integers and writte booleans.\r\n *\r\n * @param gl - WebGL context.\r\n * @param codes  - Object  with two  mandatory attributes:  `vert` for\r\n * vertex shader and `frag` for fragment shader.\r\n * @param  includes  -  (optional)  If  defined,  the  `#include  foo`\r\n * directives  of  shaders   will  be  replaced  by   the  content  of\r\n * `includes.foo`.\r\n */\r\nexport default class Program {\r\n    constructor(gl, _codes, includes = {}) {\r\n        const codes = parseIncludes(_codes, includes);\r\n        this.gl = gl;\r\n        Object.freeze(this.gl);\r\n        this.BPE = BPE;\r\n        Object.freeze(this.BPE);\r\n        this._typesNamesLookup = getTypesNamesLookup(gl);\r\n        const shaderProgram = gl.createProgram();\r\n        if (!shaderProgram) {\r\n            throw Error('Unable to create WebGLProgram!');\r\n        }\r\n        this.program = shaderProgram;\r\n        const vertShader = getVertexShader(gl, codes.vert);\r\n        gl.attachShader(shaderProgram, vertShader);\r\n        const fragShader = getFragmentShader(gl, codes.frag);\r\n        gl.attachShader(shaderProgram, fragShader);\r\n        gl.linkProgram(shaderProgram);\r\n        this.use = () => {\r\n            gl.useProgram(shaderProgram);\r\n        };\r\n        this.attribs = this.createAttributes();\r\n        this.uniforms = this.createUniforms();\r\n    }\r\n    use() {\r\n        this.gl.useProgram(this.program);\r\n    }\r\n    getTypeName(typeId) {\r\n        return this._typesNamesLookup[typeId];\r\n    }\r\n    bindAttribs(buffer, ...names) {\r\n        const that = this;\r\n        const { gl } = this;\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        let totalSize = 0;\r\n        for (const name of names) {\r\n            const attrib = that.attribs[name];\r\n            if (!attrib) {\r\n                throw Error(`Cannot find attribute \"${name}!\nIt may be not active because unused in the shader.\nAvailable attributes are: ${Object.keys(that.attribs)\r\n                    .map((n) => {\r\n                    return `\"${n}\"`;\r\n                })\r\n                    .join(', ')} (${that.attribs.length})`);\r\n            }\r\n            totalSize += attrib.size * attrib.length * BPE;\r\n        }\r\n        let offset = 0;\r\n        for (const name of names) {\r\n            const attrib = that.attribs[name];\r\n            gl.enableVertexAttribArray(attrib.location);\r\n            gl.vertexAttribPointer(attrib.location, attrib.size * attrib.length, gl.FLOAT, false, // No normalisation.\r\n            totalSize, offset);\r\n            offset += attrib.size * attrib.length * BPE;\r\n        }\r\n    }\r\n    setUniform(name, value) {\r\n        const id = `$${name}`;\r\n        const map = this;\r\n        map[id] = value;\r\n    }\r\n    createAttributes() {\r\n        const { gl, program } = this;\r\n        const attribs = {};\r\n        const attribsCount = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let index = 0; index < attribsCount; index++) {\r\n            const item = gl.getActiveAttrib(program, index);\r\n            if (!item) {\r\n                continue;\r\n            }\r\n            item.typeName = this.getTypeName(item.type);\r\n            item.length = this.getSize(gl, item);\r\n            item.location = gl.getAttribLocation(program, item.name);\r\n            attribs[item.name] = item;\r\n            Object.defineProperty(this, `$${item.name}`, {\r\n                value: item.location,\r\n                writable: false,\r\n                enumerable: true,\r\n                configurable: false,\r\n            });\r\n        }\r\n        return attribs;\r\n    }\r\n    getSize(gl, item) {\r\n        switch (item.type) {\r\n            case gl.FLOAT_VEC4:\r\n                return DIM4;\r\n            case gl.FLOAT_VEC3:\r\n                return DIM3;\r\n            case gl.FLOAT_VEC2:\r\n                return DIM2;\r\n            case gl.FLOAT:\r\n                return DIM1;\r\n            default:\r\n                throw Error(`[webgl.program:getSize] I don't know the size of the attribute \"${item.name}\" because I don't know the type \"${this.getTypeName(item.type)}\"!`);\r\n        }\r\n    }\r\n    createUniforms() {\r\n        const { gl, program } = this;\r\n        const uniforms = {};\r\n        const uniformsCount = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n        for (let index = 0; index < uniformsCount; index++) {\r\n            const item = gl.getActiveUniform(program, index);\r\n            if (!item) {\r\n                continue;\r\n            }\r\n            const location = gl.getUniformLocation(program, item.name);\r\n            if (!location) {\r\n                continue;\r\n            }\r\n            uniforms[item.name] = location;\r\n            Object.defineProperty(this, `$${item.name}`, {\r\n                set: this.createUniformSetter(item, uniforms[item.name], this._typesNamesLookup),\r\n                get: this.createUniformGetter(item),\r\n                enumerable: true,\r\n                configurable: false,\r\n            });\r\n        }\r\n        return uniforms;\r\n    }\r\n    createUniformSetter(item, nameGL, lookup) {\r\n        const { gl } = this;\r\n        const nameJS = `_$${item.name}`;\r\n        switch (item.type) {\r\n            case gl.BYTE:\r\n            case gl.UNSIGNED_BYTE:\r\n            case gl.SHORT:\r\n            case gl.UNSIGNED_SHORT:\r\n            case gl.INT:\r\n            case gl.UNSIGNED_INT:\r\n            case gl.SAMPLER_2D: // For textures, we specify the texture unit.\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniform1i(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    return function (v) {\r\n                        gl.uniform1iv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n            case gl.FLOAT:\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniform1f(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    return function (v) {\r\n                        gl.uniform1fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n            case gl.FLOAT_VEC2:\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniform2fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    throw Error(`[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC2 in uniform \"${item.name}\"!`);\r\n                }\r\n            case gl.FLOAT_VEC3:\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniform3fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    throw Error(`[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC3 in uniform \"${item.name}\"!`);\r\n                }\r\n            case gl.FLOAT_VEC4:\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniform4fv(nameGL, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    throw Error(`[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_VEC4 in uniform \"${item.name}\"!`);\r\n                }\r\n            case gl.FLOAT_MAT3:\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniformMatrix3fv(nameGL, false, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    throw Error(`[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT3 in uniform \"${item.name}\"!`);\r\n                }\r\n            case gl.FLOAT_MAT4:\r\n                if (item.size === 1) {\r\n                    return function (v) {\r\n                        gl.uniformMatrix4fv(nameGL, false, v);\r\n                        this[nameJS] = v;\r\n                    };\r\n                }\r\n                else {\r\n                    throw Error(`[webgl.program.createWriter] Don't know how to deal arrays of FLOAT_MAT4 in uniform \"${item.name}\"!`);\r\n                }\r\n            default:\r\n                throw Error(`[webgl.program.createWriter] Don't know how to deal with uniform \"${item.name}\" of type ${lookup[item.type]}!`);\r\n        }\r\n    }\r\n    createUniformGetter(item) {\r\n        const name = `_$${item.name}`;\r\n        return function () {\r\n            return this[name];\r\n        };\r\n    }\r\n}\r\n/**\r\n * This is a preprocessor for shaders.\r\n * Directives  `#include`  will be  replaced  by  the content  of  the\r\n * correspondent attribute in `includes`.\r\n */\r\nfunction parseIncludes(codes, includes) {\r\n    return {\r\n        vert: parseInclude(codes.vert, includes),\r\n        frag: parseInclude(codes.frag, includes),\r\n    };\r\n}\r\nfunction parseInclude(code, includes) {\r\n    return code\r\n        .split('\\n')\r\n        .map((line) => {\r\n        if (!line.trim().startsWith('#include')) {\r\n            return line;\r\n        }\r\n        const pos = line.indexOf('#include') + '#include'.length;\r\n        let includeName = line.substr(pos).trim();\r\n        // We accept all this systaxes:\r\n        // #include foo\r\n        // #include 'foo'\r\n        // #include <foo>\r\n        // #include \"foo\"\r\n        if ('\\'<\"'.indexOf(includeName.charAt(0)) > -1) {\r\n            includeName = includeName.substr(1, includeName.length - '<>'.length);\r\n        }\r\n        const snippet = includes[includeName];\r\n        if (typeof snippet !== 'string') {\r\n            console.error(`Include <${includeName}> not found in `, includes);\r\n            throw Error(`Include not found in shader: ${includeName}`);\r\n        }\r\n        return snippet;\r\n    })\r\n        .join('\\n');\r\n}\r\nfunction getShader(type, gl, code) {\r\n    if (type !== gl.VERTEX_SHADER && type !== gl.FRAGMENT_SHADER) {\r\n        throw Error('Type must be VERTEX_SHADER or FRAGMENT_SHADER!');\r\n    }\r\n    const shader = gl.createShader(type);\r\n    if (!shader) {\r\n        throw Error(`Unable to create a ${type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT'} shader!`);\r\n    }\r\n    gl.shaderSource(shader, code);\r\n    gl.compileShader(shader);\r\n    if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\r\n        console.error(`An error occurred compiling the shader: ${gl.getShaderInfoLog(shader)}`);\r\n        // tslint:disable-next-line:no-console\r\n        console.info(\"Here is your buggy shader's code:\");\r\n        // tslint:disable-next-line:no-console\r\n        console.info(code);\r\n        throw Error(`Unable to create a ${type === gl.VERTEX_SHADER ? 'VERTEX' : 'FRAGMENT'} shader!`);\r\n    }\r\n    return shader;\r\n}\r\nfunction getFragmentShader(gl, code) {\r\n    return getShader(gl.FRAGMENT_SHADER, gl, code);\r\n}\r\nfunction getVertexShader(gl, code) {\r\n    return getShader(gl.VERTEX_SHADER, gl, code);\r\n}\r\nfunction getTypesNamesLookup(gl) {\r\n    const lookup = {};\r\n    for (const k in gl) {\r\n        if (k !== k.toUpperCase()) {\r\n            continue;\r\n        }\r\n        const v = gl[k];\r\n        if (typeof v === 'number') {\r\n            lookup[v] = k;\r\n        }\r\n    }\r\n    return lookup;\r\n}\r\n//# sourceMappingURL=program.js.map","references":["/home/petitjea/Code/github/flat-land-gl/src/types.ts"],"map":"{\"version\":3,\"file\":\"program.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/webgl/program.ts\"],\"names\":[],\"mappings\":\"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\"}","dts":{"name":"/home/petitjea/Code/github/flat-land-gl/src/webgl/program.d.ts","writeByteOrderMark":false,"text":"import { IAtom } from '../types';\r\nexport interface IShaders {\r\n    vert: string;\r\n    frag: string;\r\n}\r\ninterface IAttrib extends WebGLActiveInfo {\r\n    typeName: string;\r\n    length: number;\r\n    location: number;\r\n}\r\ninterface IAttribsDic {\r\n    [key: string]: IAttrib;\r\n}\r\ninterface IUniformsDic {\r\n    [key: string]: WebGLUniformLocation;\r\n}\r\n/**\r\n * Creating  a  WebGL  program  for shaders  is  painful.  This  class\r\n * simplifies the process.\r\n *\r\n * @class Program\r\n *\r\n * Object properties starting with `$` are WebGL uniforms or attributes.\r\n * Uniforms behave as expected: you can read/write a value.\r\n * Attributes when read, return the location. And when written, enable/disabled\r\n * this attribute. So you read integers and writte booleans.\r\n *\r\n * @param gl - WebGL context.\r\n * @param codes  - Object  with two  mandatory attributes:  `vert` for\r\n * vertex shader and `frag` for fragment shader.\r\n * @param  includes  -  (optional)  If  defined,  the  `#include  foo`\r\n * directives  of  shaders   will  be  replaced  by   the  content  of\r\n * `includes.foo`.\r\n */\r\nexport default class Program {\r\n    readonly gl: WebGLRenderingContext;\r\n    readonly BPE: number;\r\n    readonly program: WebGLProgram;\r\n    readonly attribs: IAttribsDic;\r\n    readonly uniforms: IUniformsDic;\r\n    private _typesNamesLookup;\r\n    constructor(gl: WebGLRenderingContext, _codes: IShaders, includes?: {\r\n        [key: string]: string;\r\n    });\r\n    use(): void;\r\n    getTypeName(typeId: number): string;\r\n    bindAttribs(buffer: WebGLBuffer, ...names: string[]): void;\r\n    setUniform(name: string, value: IAtom): void;\r\n    private createAttributes;\r\n    private getSize;\r\n    private createUniforms;\r\n    private createUniformSetter;\r\n    private createUniformGetter;\r\n}\r\nexport {};\r\n"}}
